# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Samples Integration Test

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Restore gradle.properties
      env:
        GRADLE_PROPERTIES: ${{ secrets.GRADLE_PROPERTIES }}
      shell: bash
      run: |
        mkdir -p ~/.gradle/
        echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
        echo "${GRADLE_PROPERTIES}" > ~/.gradle/gradle.properties
    - name: Restore gpg key
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      shell: bash
      run: |
        mkdir /home/runner/.gnupg
        echo -n "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode > /home/runner/.gnupg/secring.gpg
    - name: Build Plugin
      run: ./gradlew clean build --info
    - name: Run Dockerfile
      run: cd dockerfile && ./gradlew clean build --info
    - name: Run AWS Lambda Test
      run: cd samples/aws-lambda/HelloWorldFunction && ./gradlew clean build --info
    - name: Run Helloworld
      run: cd samples/helloworld && ./gradlew clean build --info
